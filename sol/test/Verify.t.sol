// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test} from "forge-std/Test.sol";
import {Verify} from "../src/Verify.sol";

contract verifyTest is Test {
    Verify public verify;

    function setUp() public {
        verify = new Verify();
    }

    function test_verify() public {
        Verify.G1Point memory a = Verify.G1Point(14349536662151790349658442656977516482980007766388372688422202350228081066041, 20733107559068364371775124442880704706239403695474837210542619956669018445425);
        
        Verify.G2Point memory b = Verify.G2Point(
            [20584314894672399583431044871799448978634262148274576963764708020388779563031, 5492318351231359696848951736658441825066033748397211697783479276265181071406],
            [15871822455322374881151860296416514821202116957427212143423232309664222608563, 18117601405368035544881900236451255543206254237138288831046435922811361312451]
        );
        
        Verify.G1Point memory alpha = Verify.G1Point(1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764);
        
        Verify.G2Point memory beta = Verify.G2Point(
            [2725019753478801796453339367788033689375851816420509565303521482350756874229, 7273165102799931111715871471550377909735733521218303035754523677688038059653],
            [2512659008974376214222774206987427162027254181373325676825515531566330959255, 957874124722006818841961785324909313781880061366718538693995380805373202866]
        );
        
        Verify.G1Point[] memory pTauPub = new Verify.G1Point[](2);
            pTauPub[0] = Verify.G1Point(0, 0);
            pTauPub[1] = Verify.G1Point(210798414541389919624212797335304801785791848475058889930399305818354675289, 1266799060908853642812232016854944391940008427488582361979270423248808314705);
        
        uint256[2] memory pubInputs = [1, 21888242871839275222246405745257275088548364400416034343698204186575808495553];
        
        Verify.G2Point memory gamma = Verify.G2Point(
            [18936818173480011669507163011118288089468827259971823710084038754632518263340, 18556147586753789634670778212244811446448229326945855846642767021074501673839],
            [18825831177813899069786213865729385895767511805925522466244528695074736584695, 13775476761357503446238925910346030822904460488609979964814810757616608848118]
        );
        
        Verify.G1Point memory c = Verify.G1Point(11042861513272014754389998763114712575747841439876901213315028974112928650823, 10215036573054403812538198254545135505897871675580230168855579290065839551200);
        
        Verify.G2Point memory delta = Verify.G2Point(
            [20954117799226682825035885491234530437475518021362091509513177301640194298072, 4540444681147253467785307942530223364530218361853237193970751657229138047649],
            [21508930868448350162258892668132814424284302804699005394342512102884055673846, 11631839690097995216017572651900167465857396346217730511548857041925508482915]
        );
        
        bool verified = verify.verify(a, b, alpha, beta, pTauPub, pubInputs, gamma, c, delta);
        assertTrue(verified);
    }
}
